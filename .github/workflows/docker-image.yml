# .github/workflows/docker-image.yml

name: Test, Build and Push Docker Image for Cart Service

on:
  push:
    branches:
      - 'main'

jobs:
  # --- 测试作业 ---
  test:
    runs-on: ubuntu-latest

    # 定义服务容器，为测试启动一个 Redis 服务
    services:
      redis:
        image: redis:6.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 Java 环境 (JDK 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. 缓存 Maven 依赖
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 4. 运行测试
      # -B 表示以批处理模式运行，避免日志中的格式问题
      # test.resources/application.yml 中已将 redis host 指向 127.0.0.1
      # GitHub Actions 会自动将服务容器的端口映射到 localhost
      - name: Run Maven tests
        run: mvn -B test

  # --- 构建与推送作业 ---
  build-and-push:
    # 依赖于 test 作业，确保测试通过后才执行
    needs: test
    runs-on: ubuntu-latest
    # 仅在推送的是一个 git tag 时才运行此作业
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 为镜像生成元数据 (如标签)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 修改为你自己的 Docker Hub 用户名/项目名
          images: yingjiewang/nexus-cart
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      # 执行构建和推送
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max